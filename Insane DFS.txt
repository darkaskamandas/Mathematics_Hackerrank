#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <iostream>
#include <set>
#include <vector>
#include <cstring>
#include <string>
#include <algorithm>
#include <numeric>
#include <cmath>
#include <complex>
#include <map>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef vector<double> vd;
typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<pii> vii;
typedef vector<string> vs;
const int mod = 1000000007;

vl fac(200005, 1);
vl invfac(200005, 1);
ll mpow (ll x, ll n) {
    ll res = 1;
    while (n) {
        if (n & 1) {
            res = res * x % mod;
        }
        x = x * x % mod;
        n /= 2;
    }
    return res;
}

ll inv (ll x) {
    return mpow(x, mod - 2);    
}

ll c(int k, int n) {
    if (k < 0 || k > n) return 0;
    return fac[n] * invfac[k] % mod * invfac[n-k] % mod;
}

int main() {
    for (int i = 2; i < fac.size(); ++i) {
        fac[i] = fac[i-1] * i % mod;
        invfac[i] = inv(fac[i]);
    }
    int n;
    cin >> n;
    vi a(n);
    string in;
    for (int i = 0; i < n; ++i) {
        cin >> in;
        if (in == "?") {
            a[i] = -1;
        } else {
            a[i] = stoi(in);            
        }
    }
    if (a[0] > 0) {
        cout << 0 << endl;
        return 0;
    }
    a[0] = 0;
    for (int i = 1; i < n; ++i) if (a[i] == 0) {
        cout << 0 << endl;
        return 0;
    }
    int mi = 0;
    for (int i = 1; i < n; ++i) if (a[i] != -1) {
        mi = min(mi, a[i] - i);
        if (a[i] - i > mi) {
            cout << 0 << endl;
            return 0;
        }
    }
    ll res = 1;
    mi = 0;
    int prev = 0;
    for (int i = 1; i < n; ++i) if (a[i] != -1) {
        int t = a[i] - i;
        int k = mi - t;
        int box = i - prev;
        ll mul = c(k, k + box - 1);
        //if (t < -prev) { // ?
            int k1 = k + a[i];
            int box1 = box - a[i];
            mul -= c(k1, k1 + box1 - 1);
        //}
        res = res * mul % mod;
        mi = min(mi, t);
        prev = i;
    }
    //cerr << res << endl;
    if (prev != n-1) {
        int t = 1 - (n-1);
        int dy = mi - t + 1;
        int dx = n - prev - 1;
        //cerr << dx << ' ' << dy << endl;
        ll mul = c(dy, dx + dy);
        int dy1 = dy + 1;
        int dx1 = dx - 1;
        mul -= c(dy1, dy1 + dx1);
        res = res * mul % mod;
    }
    cout << (res + mod) % mod << endl;
    return 0;
}