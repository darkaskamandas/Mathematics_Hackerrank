using System;
using System.Collections.Generic;
using System.Text;

public class Solution
{
    static int[] LessCounts;

    static double VerticalSticks(int[] Y)
    {
        double result = 1.0;

        for (int pos = 2; pos <= Y.Length; pos++)
        {
            double t1 = 0.0;
            for (int i = 0; i < Y.Length; i++)
            {
                int x = LessCounts[i];
                int y = Y.Length - LessCounts[i] - 1;

                double pre = 1.0;
                int k = 1;
                for (; k <= (pos - 1); k++)
                {
                    double t2=pre*((double)y/(double)(x+y));
                    t1+=(t2*k);
                    pre*=((double)x/(double)(x+y));
                    if(x--==0)
                        break;
                }
                if(k==pos)
                    t1+=(pre*pos);
            }
            result += (t1 / Y.Length);
        }
        return result;
    }

    static void Main(string[] args)
    {
        int caseNum = Convert.ToInt32(Console.ReadLine());
        double[] results = new double[caseNum];

        for (int i = 0; i < caseNum; i++)
        {
            Console.ReadLine();
            string s = Console.ReadLine();
            string[] ss = s.Split(' ');
            int[] Y = new int[ss.Length];

            for (int j = 0; j < Y.Length; j++)
            {
                Y[j] = Convert.ToInt32(ss[j]);
            }
            Array.Sort(Y);

            LessCounts = new int[Y.Length];

            for (int j = 1; j < Y.Length; j++)
            {
                if (Y[j] > Y[j - 1])
                    LessCounts[j] = j;
                else
                    LessCounts[j] = LessCounts[j - 1];
            }

            results[i] = VerticalSticks(Y);
        }

        for (int i = 0; i < caseNum; i++)
        {
            Console.WriteLine("{0:.00}", results[i]);
        }

        Console.ReadLine();
    }
}